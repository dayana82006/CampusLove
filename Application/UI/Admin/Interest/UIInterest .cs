using System;
using CampusLove.Application.Services;
using CampusLove.Domain.Interfaces;
using CampusLove.Application.UI.Admin.Interest.CategoryInterest;

namespace CampusLove.Application.UI.Admin.Interest;

public class UIInterest
{
    private readonly InterestsService _servicio;
    private readonly CategoryService _categoryService;

    public UIInterest(IDbFactory factory)
    {
        var categoryRepo = factory.CreateCategoryRepository();
        var interestRepo = factory.CreateInterestsRepository();
        
        _categoryService = new CategoryService(categoryRepo);
        _servicio = new InterestsService(interestRepo, categoryRepo);

    }

    public void Ejecutar()
    {
        while (true)
        {
            Console.Clear();
            Console.WriteLine();
            Console.WriteLine("             ‚ãÜÔΩ°‚ÄßÀö öüíñ…ûÀö‚ÄßÔΩ°‚ãÜ");
            Console.WriteLine("   ‚≠í‚ùÉ.‚úÆ:‚ñπ Men√∫ de Intereses ‚óÉ:‚úÆ.‚ùÉ‚≠í");
            Console.WriteLine();
            Console.ForegroundColor = ConsoleColor.Cyan;
            Console.WriteLine(" ‚§ú‚ô°‚Üí 1. Ver todos los intereses üè∑Ô∏è");
            Console.WriteLine(" ‚§ú‚ô°‚Üí 2. Agrega;r un inter√©s nuevo üèóÔ∏è");
            Console.WriteLine(" ‚§ú‚ô°‚Üí 3. Actualizar un inter√©s ‚úèÔ∏è");
            Console.WriteLine(" ‚§ú‚ô°‚Üí 4. Eliminar un inter√©s ‚ùå");
            Console.WriteLine(" ‚§ú‚ô°‚Üí 5. Categorias de intereses üìÇ");
            Console.WriteLine(" ‚§ú‚ô°‚Üí 0. Volver al men√∫ principal ‚Ü©Ô∏è");
            Console.ResetColor();
            var opcion = Console.ReadLine();
            if (string.IsNullOrEmpty(opcion))
            {
                Console.WriteLine("‚ùå Debes ingresar una opci√≥n.");
                Console.ReadKey();
                continue;
            }
            try
            {
                switch (opcion)
                {
                    case "1":
                        _servicio.ShowAll();
                        break;
                    case "2":
                       var crear = new CreateInterest(_servicio);
                        crear.Ejecutar();
                        break;
                    case "3":
                        var actualizar = new UpdateInterest(_servicio);
                        actualizar.Ejecutar();

                        break;
                    case "4":
                        var eliminar = new DeleteInterest(_servicio);
                        eliminar.Ejecutar();
                        break;
                    case "5":
                        var uiCategory = new UICategory(_categoryService);

                        uiCategory.GestionarCategories();
                        break;
                    case "0":
                        return;
                    default:
                        Console.WriteLine("‚ùå Opci√≥n no v√°lida.");
                        break;
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå Error: {ex.Message}");
            }
            Console.WriteLine("\nPresiona una tecla para continuar...");
            Console.ReadKey();
        }
    }


}
